{"version":3,"sources":["reducer.js","actions.js","components/counter.js","components/app.js","index.js"],"names":["reducer","state","action","type","value","inc","dec","rnd","Math","floor","random","connect","counter","dispatch","bindActionCreators","actions","className","id","onClick","App","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"iRAaeA,EAbC,WAAwB,IAAvBC,EAAsB,uDAAd,EAAGC,EAAW,uCACrC,OAAQA,EAAOC,MACb,IAAK,MACH,OAAOF,EAAQ,EACjB,IAAK,MACH,OAAOA,EAAQ,EACjB,IAAK,MACH,OAAOA,EAAQC,EAAOE,MACxB,QACE,OAAOH,ICRAI,EAAM,iBAAO,CAAEF,KAAM,QACrBG,EAAM,iBAAO,CAAEH,KAAM,QACrBI,EAAM,WACjB,MAAO,CAAEJ,KAAM,MAAOC,MAAOI,KAAKC,MAAsB,GAAhBD,KAAKE,Y,OCmChCC,eAtBS,SAACV,GACvB,MAAO,CACLW,QAASX,MAIc,SAACY,GAW1B,OAAOC,YAAmBC,EAASF,KAKtBF,EAjCC,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASP,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IACpC,OACE,sBAAKS,UAAU,YAAf,UACE,oBAAIC,GAAG,UAAP,SAAkBL,IAClB,wBAAQM,QAASZ,EAAKW,GAAG,MAAMD,UAAU,kBAAzC,iBACA,wBAAQE,QAASb,EAAKY,GAAG,MAAMD,UAAU,kBAAzC,iBACA,wBAAQE,QAASX,EAAKU,GAAG,MAAMD,UAAU,kBAAzC,uBCLSG,EAJH,WACV,OAAO,cAAC,EAAD,KCIHC,EAAQC,YAAYrB,GAS1BsB,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,MACWI,SAASC,eAAe,W","file":"static/js/main.567c3d6d.chunk.js","sourcesContent":["const reducer = (state = 0, action) => {\n  switch (action.type) {\n    case 'INC':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    case 'RND':\n      return state + action.value;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","//action creators\nexport const inc = () => ({ type: 'INC'});\nexport const dec = () => ({ type: 'DEC'});\nexport const rnd = () => {\n  return { type: 'RND', value: Math.floor(Math.random() * 10)};\n};","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport { bindActionCreators } from 'redux';\n\nconst Counter = ({ counter, inc, dec, rnd }) => {\n  return (\n    <div className=\"jumbotron\">\n      <h1 id=\"counter\">{counter}</h1>\n      <button onClick={dec} id=\"dec\" className=\"btn btn-primary\">DEC</button>\n      <button onClick={inc} id=\"inc\" className=\"btn btn-primary\">INC</button>\n      <button onClick={rnd} id=\"rnd\" className=\"btn btn-primary\">RND</button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    counter: state\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  // const {\n  //   inc,\n  //   dec,\n  //   rnd\n  // } = bindActionCreators(actions, dispatch);\n  // return {\n  //   inc,\n  //   dec,\n  //   rnd\n  // };\n  return bindActionCreators(actions, dispatch);\n};\n\n// Also possible:\n// export default connect(mapStateToProps, actions)(Counter);\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","import React from 'react';\nimport Counter from './counter';\n\nconst App = () => {\n  return <Counter/>;\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './reducer';\nimport App from './components/app';\n\n\nconst store = createStore(reducer);\n\n// document.getElementById('inc').addEventListener('click', inc);\n// document.getElementById('dec').addEventListener('click', dec);\n// document.getElementById('rnd').addEventListener('click', () => {\n//   const value = Math.floor(Math.random() * 10);\n//   rnd(value);\n// });\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\n// Not needed, if \"Provider\"\n// store.subscribe(update);\n\n"],"sourceRoot":""}